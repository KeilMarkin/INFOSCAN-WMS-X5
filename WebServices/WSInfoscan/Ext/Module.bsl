
Функция CheckBarcode(Barcode, Status, Comment)
	сткОбъектХранения = ПолучитьОбъект1СПоШтрихкоду(Barcode);
	Если Не сткОбъектХранения = Неопределено Тогда	
		Status = "OK";
		Comment = Строка(сткОбъектХранения.ОбъектХранения); 
	Иначе
		Status = "ER";
		Comment = "Штрихкод не найден в рс ШтрихкодыОбъектовХранения"; 	
	КонецЕсли;
	Настройки = Справочники.isc_Настройки.ПолучитьНастройки();
	Если Настройки.Логирование Тогда
		ЗаписатьЛог(Barcode,,,,,,,,, "Проверка штрихкода. " +  Status + "." + Comment);
	КонецЕсли;	
	Возврат "";

КонецФункции

Функция SaveParametrs(Barcode, Status, Comment, Length, Height, Width, Weight, ItemType, Volume, VolumeUnit, WeightUnit, LengthUnit)
	сткОбъектХранения = ПолучитьОбъект1СПоШтрихкоду(Barcode);

	Настройки = Справочники.isc_Настройки.ПолучитьНастройки();	
	сткВходныеПараметры = Новый Структура("Length, Height, Width, Weight, Volume", Length, Height, Width, Weight, Volume, ItemType,  VolumeUnit, WeightUnit, LengthUnit);
	//сткВходныеПараметрыРУсские = Новый Структура("Length, Height, Width, Weight", "Ширина", "Высота", "Глубина", "Вес");
	Если Не сткОбъектХранения = Неопределено Тогда 
		//Каждое измерение может храниться в различных реквизитах
		Для Каждого стзМетодыХранения Из Настройки.МетодыХранения Цикл
			Если стзМетодыХранения.МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.РеквизитыУпаковки Тогда
				
				Упаковка = сткОбъектХранения.Упаковка;//ПолучитьУпаковкуИзСоответствияУпаковкам(Результат.Номенклатура, Настройки.СоответствиеУпаковок.Найти(Число(ItemType),"ИдУпаковки"));
				Попытка
					//Если ЗначениеЗАполнено(ItemType) И ЗначениеЗаполнено(Упаковка) Тогда 
					//	ОбъектХранения = Упаковка.ПолучитьОбъект();
					//Иначе 
						ОбъектХранения = сткОбъектХранения.Упаковка.ПолучитьОбъект();	
					//КонецЕсли;
					ОбъектХранения[стзМетодыХранения.Свойство_ИмяРеквизита] = сткВходныеПараметры[стзМетодыХранения.ИмяСвойства];
					ОбъектХранения.Записать();
				Исключение
					ЗаписатьЛог(Barcode, Length , Height , Width , Weight ,Volume, VolumeUnit, WeightUnit, LengthUnit, "Запись ВГХ. Ошибка получения упаковки из рс ШтрихкодыОбъектовХранения." );
				КонецПопытки;
			ИначеЕсли стзМетодыХранения.МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.РеквизитыНоменклатуры Тогда
				ОбъектХранения = сткОбъектХранения.ОбъектХранения.Номенклатура.ПолучитьОбъект(); 
				ОбъектХранения[стзМетодыХранения.Свойство_ИмяРеквизита] = сткВходныеПараметры[стзМетодыХранения.ИмяСвойства];		
				ОбъектХранения.Записать();
			ИначеЕсли стзМетодыХранения.МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.РеквизитыОбъектаХранения	Тогда
				ОбъектХранения = сткОбъектХранения.ОбъектХранения.ПолучитьОбъект(); 
				ОбъектХранения[стзМетодыХранения.Свойство_ИмяРеквизита] = сткВходныеПараметры[стзМетодыХранения.ИмяСвойства];
				ОбъектХранения.Записать();
			ИначеЕсли стзМетодыХранения.МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.ДопРеквизитыНоменклатуры Тогда
				ОбъектХранения = сткОбъектХранения.ОбъектХранения.Номенклатура.ПолучитьОбъект();
				ЗаписатьДопРевизит(ОбъектХранения, стзМетодыХранения.Свойство_ИмяРеквизита, сткВходныеПараметры[стзМетодыХранения.ИмяСвойства]);			
			ИначеЕсли стзМетодыХранения.МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.ДопРеквизитыХарактеристики Тогда
				ОбъектХранения.Записать();
			ИначеЕсли стзМетодыХранения.МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.ДопРеквизитыОбъектаХранения Тогда
				ОбъектХранения = сткОбъектХранения.ОбъектХранения.ПолучитьОбъект();
				ЗаписатьДопРевизит(ОбъектХранения, стзМетодыХранения.Свойство_ИмяРеквизита, сткВходныеПараметры[стзМетодыХранения.ИмяСвойства]);		
			ИначеЕсли стзМетодыХранения.МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.ДопРеквизитыХарактеристики Тогда
				ОбъектХранения.Записать();
			ИначеЕсли стзМетодыХранения.МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.ДопРеквизитыХарактеристики Тогда
				Если ЗначениеЗаполнено(сткОбъектХранения.Характеристика) Тогда
					ОбъектХранения = сткОбъектХранения.Характеристика.ПолучитьОбъект(); 
				Иначе 
					ОбъектХранения = сткОбъектХранения.Номенклатура.ПолучитьОбъект();
				КонецЕсли;
				ЗаписатьДопРевизит(ОбъектХранения, стзМетодыХранения.Свойство_ИмяРеквизита, сткВходныеПараметры[стзМетодыХранения.ИмяСвойства]);
				ОбъектХранения.Записать();
			ИначеЕсли стзМетодыХранения.МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.ДопСведенияНоменклатуры Тогда
				РС = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
				РС.Объект = сткОбъектХранения.Номенклатура; 
				РС.Свойство = стзМетодыХранения.Свойство_ИмяРеквизита;
				РС.Значение = сткВходныеПараметры[стзМетодыХранения.ИмяСвойства];
				РС.Записать();	
			ИначеЕсли стзМетодыХранения.МетодХраненияВГХ = Перечисления.isc_МетодХраненияВГХ.ДопСведенияХарактеристики Тогда
				РС = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
				Если ЗначениеЗаполнено(сткОбъектХранения.Характеристика) Тогда
					РС.Объект = сткОбъектХранения.Характеристика; 
				Иначе 
					РС.Объект = сткОбъектХранения.Номенклатура;
				КонецЕсли;
				
				РС.Свойство = стзМетодыХранения.Свойство_ИмяРеквизита;
				РС.Значение = сткВходныеПараметры[стзМетодыХранения.ИмяСвойства];	
				РС.Записать();	
			КонецЕсли;
				
				
		КонецЦикла;
		Status = "OK";
		Comment = Строка(сткОбъектХранения.ОбъектХранения); 
	Иначе
		Status = "ER";
		Comment = "Штрихкод не найден в рс"; 	
	КонецЕсли;
	
		
	Если ЗначениеЗаполнено(Настройки) И Настройки.Логирование Тогда
		ЗаписатьЛог(Barcode, Length , Height , Width , Weight ,Volume, VolumeUnit, WeightUnit, LengthUnit, "Запись ВГХ. " +  Status + ". -" + Comment);
	КонецЕсли;
	Возврат "";
КонецФункции  

Процедура ЗаписатьДопРевизит(ОбъектЗаписи, ДопРеквизит, Значение)
		   СтрДопРек = ОбъектЗаписи.ДополнительныеРеквизиты.Найти(ДопРеквизит,"Свойство");
		   Если ЗначениеЗаполнено(СтрДопРек)Тогда
			   СтрДопРек.Значение = Значение; 
		   Иначе
			   СтрДопРек = ОбъектЗаписи.ДополнительныеРеквизиты.Добавить();
			   СтрДопРек.Свойство = ДопРеквизит;
			   СтрДопРек.Значение = Значение;
		   КонецЕсли;
		   ОбъектЗаписи.Записать();
КонецПроцедуры

Функция ПолучитьУпаковкуИзСоответствияУпаковкам(Номенклатура, стрНастроек)
	Если Не ЗначениеЗаполнено(стрНастроек) Тогда
		Возврат Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	КонецЕсли;	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|ГДЕ
	|	УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения = &ЕдИзм И 
	|	УпаковкиЕдиницыИзмерения.Владелец = &Владелец");
	Запрос.УстановитьПараметр("Владелец", Номенклатура); 
	Запрос.УстановитьПараметр("ЕдИзм", стрНастроек.ЕдиницаИзмерения);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка(); 
	КонецЕсли;  
КонецФункции

Функция ПолучитьЗначениеВЕдИзм1С(ЗначениеИзИнфоскан, НазваниеИзмерения, ЕдИзм1С,  VolumeUnit, WeightUnit, LengthUnit)
//Единица объема, разделитель дробной части - точка или запятая на выбор:
//см - сантиметры
//м - метры
//л - литры
//кг - объемный вес

//Единица массы, разделитель дробной части - точка или запятая на выбор:
//гр
//кг

//Единица длины, разделитель дробной части - точка или запятая на выбор:
//мм
//см
//м
Если НазваниеИзмерения = "Volume" Тогда
	Возврат ЗначениеИзИнфоскан;
ИначеЕсли НазваниеИзмерения = "Weight" Тогда
	Возврат ЗначениеИзИнфоскан;
 
Иначе 
Возврат ЗначениеИзИнфоскан;
КонецЕсли;
Возврат	1;
КонецФункции	

Функция ПолучитьОбъект1СПоШтрихкоду(Штрихкод)
	   Запрос = Новый Запрос("ВЫБРАТЬ
	                     |	ШтрихкодыОбъектовХранения.ОбъектХранения КАК ОбъектХранения,
	                     |	ШтрихкодыОбъектовХранения.Упаковка КАК Упаковка
	                     |ИЗ
	                     |	РегистрСведений.ШтрихкодыОбъектовХранения КАК ШтрихкодыОбъектовХранения
	                     |ГДЕ
	                     |	ШтрихкодыОбъектовХранения.Штрихкод = &Штрихкод");
	Запрос.УстановитьПараметр("Штрихкод", Штрихкод);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда 
		Возврат Новый Структура("ОбъектХранения,Упаковка", Результат.ОбъектХранения, Результат.Упаковка);
	Иначе
		Возврат Неопределено;	
	КонецЕсли;
КонецФункции	

Процедура ЗаписатьЛог(Barcode, Length = 0, Height = 0, Width = 0, Weight = 0,Volume = 0, VolumeUnit = 0, WeightUnit = 0, LengthUnit = 0, Событие)
	РС = РегистрыСведений.isc_ЛогСобытий.СоздатьМенеджерЗаписи();
	РС.Дата 		= ТекущаяДата();
	РС.Событие 		= Событие;
	РС.Штрихкод 	= Barcode;
	РС.Длина 		= Length;
	РС.Ширина 		= Width;
	РС.Высота 		= Height;
	РС.Масса 		= Weight;
	РС.Объем 		= Weight;
	РС.ЕдИзмОбъема 		= VolumeUnit;
	РС.ЕдИзмМассы 		= WeightUnit;
	РС.ЕдИзмДлин 		= LengthUnit;
	РС.Записать();
КонецПроцедуры	
